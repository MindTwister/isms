// Generated by CoffeeScript 1.3.3
(function() {
  var Message, Parser, sqlite3;

  sqlite3 = require('sqlite3');

  Message = (function() {

    function Message(data) {
      this.address = data.id;
      this.date = data.date * 1000 + 978307201 * 1000;
      this.body = data.text;
      this.type = data.is_from_me != null ? 2 : 1;
      this.service_center = data.service_center;
    }

    Message.prototype.toString = function() {
      return "<sms protocol='0' address='" + this.address + "' date='" + this.date + "' type='" + this.type + "' subject='null' body='" + this.body + "' toa='null' sc_toa='null' service_center='" + this.service_center + "' read='1' status='-1' locked='0' />";
    };

    return Message;

  })();

  Parser = (function() {

    Parser.prototype.parse = function(callBack) {
      var _this = this;
      this.messages = [];
      return this.db.each("SELECT * FROM message	LEFT JOIN chat_message_join on chat_message_join.message_id = message.ROWID	LEFT JOIN chat_handle_join on chat_handle_join.chat_id = chat_message_join.chat_id	LEFT JOIN handle on chat_handle_join.handle_id = handle.ROWID", function(err, row) {
        return _this.messages.push(new Message(row));
      }, function() {
        var m, strOut, _i, _len, _ref;
        strOut = "<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>";
        strOut += "<smses count='" + _this.messages.length + "'>";
        _ref = _this.messages;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          m = _ref[_i];
          strOut += m.toString();
        }
        strOut += "</smses>";
        return callBack(strOut);
      });
    };

    function Parser(file) {
      this.db = new sqlite3.Database(file);
    }

    return Parser;

  })();

  module.exports = Parser;

}).call(this);
